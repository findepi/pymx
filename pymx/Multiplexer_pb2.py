# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2


_MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE_WHOM = descriptor.EnumDescriptor(
  name='Whom',
  full_name='multiplexer.MultiplexerMessageDescription.RoutingRule.Whom',
  filename='Whom',
  values=[
    descriptor.EnumValueDescriptor(
      name='ALL', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ANY', index=1, number=2,
      options=None,
      type=None),
  ],
  options=None,
)

_LOGGINGMETHOD_VALUES = descriptor.EnumDescriptor(
  name='Values',
  full_name='multiplexer.LoggingMethod.Values',
  filename='Values',
  values=[
    descriptor.EnumValueDescriptor(
      name='CONSOLE', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='FILE', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BOTH', index=2, number=3,
      options=None,
      type=None),
  ],
  options=None,
)

_COMPRESSION_VALUES = descriptor.EnumDescriptor(
  name='Values',
  full_name='multiplexer.Compression.Values',
  filename='Values',
  values=[
    descriptor.EnumValueDescriptor(
      name='NO_COMPRESSION', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='GZIP', index=1, number=1,
      options=None,
      type=None),
  ],
  options=None,
)


_MULTIPLEXERPEERDESCRIPTION = descriptor.Descriptor(
  name='MultiplexerPeerDescription',
  full_name='multiplexer.MultiplexerPeerDescription',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='type', full_name='multiplexer.MultiplexerPeerDescription.type', index=0,
      number=1, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='multiplexer.MultiplexerPeerDescription.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='comment', full_name='multiplexer.MultiplexerPeerDescription.comment', index=2,
      number=3, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='queue_size', full_name='multiplexer.MultiplexerPeerDescription.queue_size', index=3,
      number=4, type=13, cpp_type=3, label=1,
      default_value=1024,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_passive', full_name='multiplexer.MultiplexerPeerDescription.is_passive', index=4,
      number=5, type=8, cpp_type=7, label=1,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE = descriptor.Descriptor(
  name='RoutingRule',
  full_name='multiplexer.MultiplexerMessageDescription.RoutingRule',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='peer', full_name='multiplexer.MultiplexerMessageDescription.RoutingRule.peer', index=0,
      number=20, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='peer_type', full_name='multiplexer.MultiplexerMessageDescription.RoutingRule.peer_type', index=1,
      number=1, type=13, cpp_type=3, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='whom', full_name='multiplexer.MultiplexerMessageDescription.RoutingRule.whom', index=2,
      number=2, type=14, cpp_type=8, label=1,
      default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='delivery_error_is_error', full_name='multiplexer.MultiplexerMessageDescription.RoutingRule.delivery_error_is_error', index=3,
      number=3, type=8, cpp_type=7, label=1,
      default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='report_delivery_error', full_name='multiplexer.MultiplexerMessageDescription.RoutingRule.report_delivery_error', index=4,
      number=4, type=8, cpp_type=7, label=1,
      default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='include_original_packet_in_report', full_name='multiplexer.MultiplexerMessageDescription.RoutingRule.include_original_packet_in_report', index=5,
      number=5, type=8, cpp_type=7, label=1,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE_WHOM,
  ],
  options=None)

_MULTIPLEXERMESSAGEDESCRIPTION = descriptor.Descriptor(
  name='MultiplexerMessageDescription',
  full_name='multiplexer.MultiplexerMessageDescription',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='type', full_name='multiplexer.MultiplexerMessageDescription.type', index=0,
      number=1, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='multiplexer.MultiplexerMessageDescription.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='comment', full_name='multiplexer.MultiplexerMessageDescription.comment', index=2,
      number=3, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='to', full_name='multiplexer.MultiplexerMessageDescription.to', index=3,
      number=4, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_LOGGINGMETHOD = descriptor.Descriptor(
  name='LoggingMethod',
  full_name='multiplexer.LoggingMethod',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _LOGGINGMETHOD_VALUES,
  ],
  options=None)


_COMPRESSION = descriptor.Descriptor(
  name='Compression',
  full_name='multiplexer.Compression',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _COMPRESSION_VALUES,
  ],
  options=None)


_MULTIPLEXERMESSAGE = descriptor.Descriptor(
  name='MultiplexerMessage',
  full_name='multiplexer.MultiplexerMessage',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='multiplexer.MultiplexerMessage.id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='from', full_name='multiplexer.MultiplexerMessage.from', index=1,
      number=2, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='to', full_name='multiplexer.MultiplexerMessage.to', index=2,
      number=3, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='report_delivery_error', full_name='multiplexer.MultiplexerMessage.report_delivery_error', index=3,
      number=21, type=8, cpp_type=7, label=1,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='include_original_packet_in_report', full_name='multiplexer.MultiplexerMessage.include_original_packet_in_report', index=4,
      number=22, type=8, cpp_type=7, label=1,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='type', full_name='multiplexer.MultiplexerMessage.type', index=5,
      number=4, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='message', full_name='multiplexer.MultiplexerMessage.message', index=6,
      number=5, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='compression', full_name='multiplexer.MultiplexerMessage.compression', index=7,
      number=24, type=14, cpp_type=8, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='timestamp', full_name='multiplexer.MultiplexerMessage.timestamp', index=8,
      number=6, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='references', full_name='multiplexer.MultiplexerMessage.references', index=9,
      number=7, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='workflow', full_name='multiplexer.MultiplexerMessage.workflow', index=10,
      number=8, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='override_rrules', full_name='multiplexer.MultiplexerMessage.override_rrules', index=11,
      number=20, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='logging_method', full_name='multiplexer.MultiplexerMessage.logging_method', index=12,
      number=23, type=14, cpp_type=8, label=1,
      default_value=3,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_WELCOMEMESSAGE = descriptor.Descriptor(
  name='WelcomeMessage',
  full_name='multiplexer.WelcomeMessage',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='type', full_name='multiplexer.WelcomeMessage.type', index=0,
      number=1, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='id', full_name='multiplexer.WelcomeMessage.id', index=1,
      number=2, type=4, cpp_type=4, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='multiplexer_password', full_name='multiplexer.WelcomeMessage.multiplexer_password', index=2,
      number=3, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_BACKENDFORPACKETSEARCH = descriptor.Descriptor(
  name='BackendForPacketSearch',
  full_name='multiplexer.BackendForPacketSearch',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='packet_type', full_name='multiplexer.BackendForPacketSearch.packet_type', index=0,
      number=1, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_DELIVERYERROR = descriptor.Descriptor(
  name='DeliveryError',
  full_name='multiplexer.DeliveryError',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='packet_id', full_name='multiplexer.DeliveryError.packet_id', index=0,
      number=1, type=4, cpp_type=4, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='failed_type', full_name='multiplexer.DeliveryError.failed_type', index=1,
      number=2, type=13, cpp_type=3, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='failed_to', full_name='multiplexer.DeliveryError.failed_to', index=2,
      number=3, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='is_known_type', full_name='multiplexer.DeliveryError.is_known_type', index=3,
      number=4, type=8, cpp_type=7, label=1,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='original_message', full_name='multiplexer.DeliveryError.original_message', index=4,
      number=20, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_MULTIPLEXERRULES = descriptor.Descriptor(
  name='MultiplexerRules',
  full_name='multiplexer.MultiplexerRules',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='type', full_name='multiplexer.MultiplexerRules.type', index=0,
      number=1, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='peer', full_name='multiplexer.MultiplexerRules.peer', index=1,
      number=2, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_SEARCHCOLLECTEDLOGS = descriptor.Descriptor(
  name='SearchCollectedLogs',
  full_name='multiplexer.SearchCollectedLogs',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='workflow', full_name='multiplexer.SearchCollectedLogs.workflow', index=0,
      number=1, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='limit', full_name='multiplexer.SearchCollectedLogs.limit', index=1,
      number=2, type=13, cpp_type=3, label=1,
      default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='offset', full_name='multiplexer.SearchCollectedLogs.offset', index=2,
      number=3, type=13, cpp_type=3, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='query', full_name='multiplexer.SearchCollectedLogs.query', index=3,
      number=4, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_REPLAYCOLLECTEDEVENTS = descriptor.Descriptor(
  name='ReplayCollectedEvents',
  full_name='multiplexer.ReplayCollectedEvents',
  filename='Multiplexer.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='from_timestamp', full_name='multiplexer.ReplayCollectedEvents.from_timestamp', index=0,
      number=1, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='to_timestamp', full_name='multiplexer.ReplayCollectedEvents.to_timestamp', index=1,
      number=2, type=4, cpp_type=4, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='event_type', full_name='multiplexer.ReplayCollectedEvents.event_type', index=2,
      number=3, type=13, cpp_type=3, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE.fields_by_name['whom'].enum_type = _MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE_WHOM
_MULTIPLEXERMESSAGEDESCRIPTION.fields_by_name['to'].message_type = _MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE
_MULTIPLEXERMESSAGE.fields_by_name['compression'].enum_type = _COMPRESSION_VALUES
_MULTIPLEXERMESSAGE.fields_by_name['override_rrules'].message_type = _MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE
_MULTIPLEXERMESSAGE.fields_by_name['logging_method'].enum_type = _LOGGINGMETHOD_VALUES
_DELIVERYERROR.fields_by_name['original_message'].message_type = _MULTIPLEXERMESSAGE
_MULTIPLEXERRULES.fields_by_name['type'].message_type = _MULTIPLEXERMESSAGEDESCRIPTION
_MULTIPLEXERRULES.fields_by_name['peer'].message_type = _MULTIPLEXERPEERDESCRIPTION

class MultiplexerPeerDescription(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MULTIPLEXERPEERDESCRIPTION

class MultiplexerMessageDescription(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class RoutingRule(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _MULTIPLEXERMESSAGEDESCRIPTION_ROUTINGRULE
  DESCRIPTOR = _MULTIPLEXERMESSAGEDESCRIPTION

class LoggingMethod(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGGINGMETHOD

class Compression(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _COMPRESSION

class MultiplexerMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MULTIPLEXERMESSAGE

class WelcomeMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _WELCOMEMESSAGE

class BackendForPacketSearch(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _BACKENDFORPACKETSEARCH

class DeliveryError(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _DELIVERYERROR

class MultiplexerRules(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MULTIPLEXERRULES

class SearchCollectedLogs(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SEARCHCOLLECTEDLOGS

class ReplayCollectedEvents(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REPLAYCOLLECTEDEVENTS

